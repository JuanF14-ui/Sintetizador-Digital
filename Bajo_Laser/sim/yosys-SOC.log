
 /----------------------------------------------------------------------------\
 |                                                                            |
 |  yosys -- Yosys Open SYnthesis Suite                                       |
 |                                                                            |
 |  Copyright (C) 2012 - 2020  Claire Xenia Wolf <claire@yosyshq.com>         |
 |                                                                            |
 |  Permission to use, copy, modify, and/or distribute this software for any  |
 |  purpose with or without fee is hereby granted, provided that the above    |
 |  copyright notice and this permission notice appear in all copies.         |
 |                                                                            |
 |  THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES  |
 |  WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF          |
 |  MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR   |
 |  ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES    |
 |  WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN     |
 |  ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF   |
 |  OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.            |
 |                                                                            |
 \----------------------------------------------------------------------------/

 Yosys 0.33+6 (git sha1 41b34a193, x86_64-conda-linux-gnu-cc 11.2.0 -fvisibility-inlines-hidden -fmessage-length=0 -march=nocona -mtune=haswell -ftree-vectorize -fPIC -fstack-protector-strong -fno-plt -O2 -ffunction-sections -fdebug-prefix-map=/root/conda-eda/conda-eda/workdir/conda-env/conda-bld/yosys_1694128612374/work=/usr/local/src/conda/yosys-0.33_7_g41b34a193 -fdebug-prefix-map=/home/juanf/miniconda3/envs/digital=/usr/local/src/conda-prefix -fPIC -Os -fno-merge-constants)


-- Parsing `SOC.v' using frontend ` -vlog2k' --

1. Executing Verilog-2005 frontend: SOC.v
Parsing Verilog input from `SOC.v' to AST representation.
Storing AST representation for module `$abstract\SOC'.
Successfully finished Verilog frontend.

-- Parsing `cores/cpu/femtorv32_quark.v' using frontend ` -vlog2k' --

2. Executing Verilog-2005 frontend: cores/cpu/femtorv32_quark.v
Parsing Verilog input from `cores/cpu/femtorv32_quark.v' to AST representation.
Storing AST representation for module `$abstract\FemtoRV32'.
Successfully finished Verilog frontend.

-- Parsing `chip_select.v' using frontend ` -vlog2k' --

3. Executing Verilog-2005 frontend: chip_select.v
Parsing Verilog input from `chip_select.v' to AST representation.
Storing AST representation for module `$abstract\chip_select'.
Successfully finished Verilog frontend.

-- Parsing `cores/memory/Memory.v' using frontend ` -vlog2k' --

4. Executing Verilog-2005 frontend: cores/memory/Memory.v
Parsing Verilog input from `cores/memory/Memory.v' to AST representation.
Storing AST representation for module `$abstract\Memory'.
Successfully finished Verilog frontend.

-- Parsing `cores/uart/perip_uart.v' using frontend ` -vlog2k' --

5. Executing Verilog-2005 frontend: cores/uart/perip_uart.v
Parsing Verilog input from `cores/uart/perip_uart.v' to AST representation.
Storing AST representation for module `$abstract\peripheral_uart'.
Storing AST representation for module `$abstract\peripheral_uart_addr_decoder'.
Storing AST representation for module `$abstract\peripheral_uart_register_control'.
Successfully finished Verilog frontend.

-- Parsing `cores/uart/uart.v' using frontend ` -vlog2k' --

6. Executing Verilog-2005 frontend: cores/uart/uart.v
Parsing Verilog input from `cores/uart/uart.v' to AST representation.
Storing AST representation for module `$abstract\uart'.
Storing AST representation for module `$abstract\uart_rx'.
Storing AST representation for module `$abstract\uart_tx'.
Successfully finished Verilog frontend.

-- Parsing `cores/mult/perip_mult.v' using frontend ` -vlog2k' --

7. Executing Verilog-2005 frontend: cores/mult/perip_mult.v
Parsing Verilog input from `cores/mult/perip_mult.v' to AST representation.
Storing AST representation for module `$abstract\peripheral_mult'.
Successfully finished Verilog frontend.

-- Parsing `cores/mult/mult.v' using frontend ` -vlog2k' --

8. Executing Verilog-2005 frontend: cores/mult/mult.v
Parsing Verilog input from `cores/mult/mult.v' to AST representation.
Storing AST representation for module `$abstract\mult'.
Successfully finished Verilog frontend.

-- Parsing `cores/dpRAM/dpram.v' using frontend ` -vlog2k' --

9. Executing Verilog-2005 frontend: cores/dpRAM/dpram.v
Parsing Verilog input from `cores/dpRAM/dpram.v' to AST representation.
Storing AST representation for module `$abstract\dp_ram'.
Successfully finished Verilog frontend.

-- Parsing `cores/dpRAM/perip_dpram.v' using frontend ` -vlog2k' --

10. Executing Verilog-2005 frontend: cores/dpRAM/perip_dpram.v
Parsing Verilog input from `cores/dpRAM/perip_dpram.v' to AST representation.
Storing AST representation for module `$abstract\peripheral_dpram'.
Successfully finished Verilog frontend.

-- Parsing `cores/laser/perip_laser.v' using frontend ` -vlog2k' --

11. Executing Verilog-2005 frontend: cores/laser/perip_laser.v
Parsing Verilog input from `cores/laser/perip_laser.v' to AST representation.
Storing AST representation for module `$abstract\perip_laser'.
Successfully finished Verilog frontend.

-- Running command `prep -top SOC; hierarchy -check; proc; write_json sim/SOC.json' --

12. Executing PREP pass.

12.1. Executing HIERARCHY pass (managing design hierarchy).

12.2. Executing AST frontend in derive mode using pre-parsed AST for module `\SOC'.
Generating RTLIL representation for module `\SOC'.

12.2.1. Analyzing design hierarchy..
Top module:  \SOC

12.2.2. Executing AST frontend in derive mode using pre-parsed AST for module `\peripheral_mult'.
Generating RTLIL representation for module `\peripheral_mult'.

12.2.3. Executing AST frontend in derive mode using pre-parsed AST for module `\perip_laser'.
Generating RTLIL representation for module `\perip_laser'.
Warning: wire '\d_out' is assigned in a block at cores/laser/perip_laser.v:16.9-16.18.
Warning: wire '\d_out' is assigned in a block at cores/laser/perip_laser.v:20.21-20.44.
Parameter \clk_freq = 25000000
Parameter \baud = 57600

12.2.4. Executing AST frontend in derive mode using pre-parsed AST for module `\peripheral_uart'.
Parameter \clk_freq = 25000000
Parameter \baud = 57600
Generating RTLIL representation for module `$paramod$e358107493866f19ba52d8dda1c67d080e76663e\peripheral_uart'.

12.2.5. Executing AST frontend in derive mode using pre-parsed AST for module `\Memory'.
Generating RTLIL representation for module `\Memory'.

12.2.6. Executing AST frontend in derive mode using pre-parsed AST for module `\chip_select'.
Generating RTLIL representation for module `\chip_select'.

12.2.7. Executing AST frontend in derive mode using pre-parsed AST for module `\FemtoRV32'.
Generating RTLIL representation for module `\FemtoRV32'.

12.2.8. Analyzing design hierarchy..
Top module:  \SOC
Used module:     \peripheral_mult
Used module:     \perip_laser
Used module:     $paramod$e358107493866f19ba52d8dda1c67d080e76663e\peripheral_uart
Used module:     \Memory
Used module:     \chip_select
Used module:     \FemtoRV32

12.2.9. Executing AST frontend in derive mode using pre-parsed AST for module `\mult'.
Generating RTLIL representation for module `\mult'.
Parameter \freq_hz = 25000000
Parameter \baud = 57600

12.2.10. Executing AST frontend in derive mode using pre-parsed AST for module `\uart'.
Parameter \freq_hz = 25000000
Parameter \baud = 57600
Generating RTLIL representation for module `$paramod$1c9b49bacefaeab44db5983aee61d9795015608a\uart'.

12.2.11. Executing AST frontend in derive mode using pre-parsed AST for module `\peripheral_uart_register_control'.
Generating RTLIL representation for module `\peripheral_uart_register_control'.

12.2.12. Executing AST frontend in derive mode using pre-parsed AST for module `\peripheral_uart_addr_decoder'.
Generating RTLIL representation for module `\peripheral_uart_addr_decoder'.

12.2.13. Analyzing design hierarchy..
Top module:  \SOC
Used module:     \peripheral_mult
Used module:         \mult
Used module:     \perip_laser
Used module:     $paramod$e358107493866f19ba52d8dda1c67d080e76663e\peripheral_uart
Used module:         $paramod$1c9b49bacefaeab44db5983aee61d9795015608a\uart
Used module:         \peripheral_uart_register_control
Used module:         \peripheral_uart_addr_decoder
Used module:     \Memory
Used module:     \chip_select
Used module:     \FemtoRV32

12.2.14. Executing AST frontend in derive mode using pre-parsed AST for module `\uart_tx'.
Generating RTLIL representation for module `\uart_tx'.

12.2.15. Executing AST frontend in derive mode using pre-parsed AST for module `\uart_rx'.
Generating RTLIL representation for module `\uart_rx'.

12.2.16. Analyzing design hierarchy..
Top module:  \SOC
Used module:     \peripheral_mult
Used module:         \mult
Used module:     \perip_laser
Used module:     $paramod$e358107493866f19ba52d8dda1c67d080e76663e\peripheral_uart
Used module:         $paramod$1c9b49bacefaeab44db5983aee61d9795015608a\uart
Used module:             \uart_tx
Used module:             \uart_rx
Used module:         \peripheral_uart_register_control
Used module:         \peripheral_uart_addr_decoder
Used module:     \Memory
Used module:     \chip_select
Used module:     \FemtoRV32

12.2.17. Analyzing design hierarchy..
Top module:  \SOC
Used module:     \peripheral_mult
Used module:         \mult
Used module:     \perip_laser
Used module:     $paramod$e358107493866f19ba52d8dda1c67d080e76663e\peripheral_uart
Used module:         $paramod$1c9b49bacefaeab44db5983aee61d9795015608a\uart
Used module:             \uart_tx
Used module:             \uart_rx
Used module:         \peripheral_uart_register_control
Used module:         \peripheral_uart_addr_decoder
Used module:     \Memory
Used module:     \chip_select
Used module:     \FemtoRV32
Removing unused module `$abstract\perip_laser'.
Removing unused module `$abstract\peripheral_dpram'.
Removing unused module `$abstract\dp_ram'.
Removing unused module `$abstract\mult'.
Removing unused module `$abstract\peripheral_mult'.
Removing unused module `$abstract\uart_tx'.
Removing unused module `$abstract\uart_rx'.
Removing unused module `$abstract\uart'.
Removing unused module `$abstract\peripheral_uart_register_control'.
Removing unused module `$abstract\peripheral_uart_addr_decoder'.
Removing unused module `$abstract\peripheral_uart'.
Removing unused module `$abstract\Memory'.
Removing unused module `$abstract\chip_select'.
Removing unused module `$abstract\FemtoRV32'.
Removing unused module `$abstract\SOC'.
Removed 15 unused modules.

12.3. Executing PROC pass (convert processes to netlists).

12.3.1. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Removing empty process `Memory.$proc$cores/memory/Memory.v:0$49'.
Cleaned up 0 empty switches.

12.3.2. Executing PROC_RMDEAD pass (remove dead branches from decision trees).
Marked 1 switch rules as full_case in process $proc$cores/uart/perip_uart.v:133$212 in module peripheral_uart_addr_decoder.
Marked 1 switch rules as full_case in process $proc$cores/uart/perip_uart.v:165$211 in module peripheral_uart_register_control.
Marked 1 switch rules as full_case in process $proc$cores/uart/uart.v:23$204 in module $paramod$1c9b49bacefaeab44db5983aee61d9795015608a\uart.
Marked 5 switch rules as full_case in process $proc$cores/mult/mult.v:32$194 in module mult.
Marked 2 switch rules as full_case in process $proc$cores/cpu/femtorv32_quark.v:334$179 in module FemtoRV32.
Marked 2 switch rules as full_case in process $proc$cores/cpu/femtorv32_quark.v:102$64 in module FemtoRV32.
Marked 1 switch rules as full_case in process $proc$chip_select.v:47$51 in module chip_select.
Marked 1 switch rules as full_case in process $proc$chip_select.v:34$50 in module chip_select.
Marked 4 switch rules as full_case in process $proc$cores/memory/Memory.v:19$22 in module Memory.
Marked 1 switch rules as full_case in process $proc$cores/laser/perip_laser.v:14$15 in module perip_laser.
Marked 3 switch rules as full_case in process $proc$cores/mult/perip_mult.v:62$13 in module peripheral_mult.
Marked 2 switch rules as full_case in process $proc$cores/mult/perip_mult.v:45$8 in module peripheral_mult.
Marked 2 switch rules as full_case in process $proc$cores/mult/perip_mult.v:29$7 in module peripheral_mult.
Marked 4 switch rules as full_case in process $proc$cores/uart/uart.v:77$222 in module uart_rx.
Marked 2 switch rules as full_case in process $proc$cores/uart/uart.v:139$215 in module uart_tx.
Removed a total of 0 dead cases.

12.3.3. Executing PROC_PRUNE pass (remove redundant assignments in processes).
Removed 2 redundant assignments.
Promoted 36 assignments to connections.

12.3.4. Executing PROC_INIT pass (extract init attributes).
Found init rule in `\mult.$proc$cores/mult/mult.v:0$202'.
  Set init value: \result = 0
  Set init value: \done = 1'0

12.3.5. Executing PROC_ARST pass (detect async resets in processes).
Found async reset \reset in `\mult.$proc$cores/mult/mult.v:32$194'.

12.3.6. Executing PROC_ROM pass (convert switches to ROMs).
Converted 0 switches.

12.3.7. Executing PROC_MUX pass (convert decision trees to multiplexers).
Creating decoders for process `\peripheral_uart_addr_decoder.$proc$cores/uart/perip_uart.v:133$212'.
     1/1: $1\sel[1:0]
Creating decoders for process `\peripheral_uart_register_control.$proc$cores/uart/perip_uart.v:165$211'.
     1/1: $0\d_out[31:0]
Creating decoders for process `\peripheral_uart_register_control.$proc$cores/uart/perip_uart.v:157$208'.
     1/2: $0\uart_ctrl[7:0]
     2/2: $0\d_in_uart[7:0]
Creating decoders for process `$paramod$1c9b49bacefaeab44db5983aee61d9795015608a\uart.$proc$cores/uart/uart.v:30$207'.
Creating decoders for process `$paramod$1c9b49bacefaeab44db5983aee61d9795015608a\uart.$proc$cores/uart/uart.v:23$204'.
     1/1: $0\enable16_counter[5:0]
Creating decoders for process `\mult.$proc$cores/mult/mult.v:0$202'.
Creating decoders for process `\mult.$proc$cores/mult/mult.v:32$194'.
     1/15: $5\state[2:0]
     2/15: $4\state[2:0]
     3/15: $3\state[2:0]
     4/15: $2\state[2:0]
     5/15: $2\result[31:0]
     6/15: $2\done[0:0]
     7/15: $2\count[4:0]
     8/15: $2\B[15:0]
     9/15: $2\A[15:0]
    10/15: $1\count[4:0]
    11/15: $1\state[2:0]
    12/15: $1\done[0:0]
    13/15: $1\result[31:0]
    14/15: $1\B[15:0]
    15/15: $1\A[15:0]
Creating decoders for process `\FemtoRV32.$proc$cores/cpu/femtorv32_quark.v:380$192'.
Creating decoders for process `\FemtoRV32.$proc$cores/cpu/femtorv32_quark.v:334$179'.
     1/5: $0\state[3:0]
     2/5: $0\instr[29:0]
     3/5: $0\PC[23:0]
     4/5: $0\rs2[31:0]
     5/5: $0\rs1[31:0]
Creating decoders for process `\FemtoRV32.$proc$cores/cpu/femtorv32_quark.v:153$104'.
     1/2: $0\aluShamt[4:0]
     2/2: $0\aluReg[31:0]
Creating decoders for process `\FemtoRV32.$proc$cores/cpu/femtorv32_quark.v:102$64'.
     1/6: $2$memwr$\registerFile$cores/cpu/femtorv32_quark.v:105$52_EN[31:0]$74
     2/6: $2$memwr$\registerFile$cores/cpu/femtorv32_quark.v:105$52_DATA[31:0]$73
     3/6: $2$memwr$\registerFile$cores/cpu/femtorv32_quark.v:105$52_ADDR[4:0]$72
     4/6: $1$memwr$\registerFile$cores/cpu/femtorv32_quark.v:105$52_EN[31:0]$70
     5/6: $1$memwr$\registerFile$cores/cpu/femtorv32_quark.v:105$52_DATA[31:0]$69
     6/6: $1$memwr$\registerFile$cores/cpu/femtorv32_quark.v:105$52_ADDR[4:0]$68
Creating decoders for process `\chip_select.$proc$chip_select.v:47$51'.
     1/1: $1\mem_rdata[31:0]
Creating decoders for process `\chip_select.$proc$chip_select.v:34$50'.
     1/1: $1\cs[6:0]
Creating decoders for process `\Memory.$proc$cores/memory/Memory.v:19$22'.
     1/13: $1$memwr$\MEM$cores/memory/Memory.v:26$21_EN[31:0]$47
     2/13: $1$memwr$\MEM$cores/memory/Memory.v:26$21_DATA[31:0]$46
     3/13: $1$memwr$\MEM$cores/memory/Memory.v:26$21_ADDR[29:0]$45
     4/13: $1$memwr$\MEM$cores/memory/Memory.v:25$20_EN[31:0]$44
     5/13: $1$memwr$\MEM$cores/memory/Memory.v:25$20_DATA[31:0]$43
     6/13: $1$memwr$\MEM$cores/memory/Memory.v:25$20_ADDR[29:0]$42
     7/13: $1$memwr$\MEM$cores/memory/Memory.v:24$19_EN[31:0]$41
     8/13: $1$memwr$\MEM$cores/memory/Memory.v:24$19_DATA[31:0]$40
     9/13: $1$memwr$\MEM$cores/memory/Memory.v:24$19_ADDR[29:0]$39
    10/13: $1$memwr$\MEM$cores/memory/Memory.v:23$18_EN[31:0]$38
    11/13: $1$memwr$\MEM$cores/memory/Memory.v:23$18_DATA[31:0]$37
    12/13: $1$memwr$\MEM$cores/memory/Memory.v:23$18_ADDR[29:0]$36
    13/13: $0\mem_rdata[31:0]
Creating decoders for process `\perip_laser.$proc$cores/laser/perip_laser.v:14$15'.
     1/1: $1\d_out[31:0]
Creating decoders for process `\peripheral_mult.$proc$cores/mult/perip_mult.v:62$13'.
     1/3: $3\d_out[31:0]
     2/3: $2\d_out[31:0]
     3/3: $1\d_out[31:0]
Creating decoders for process `\peripheral_mult.$proc$cores/mult/perip_mult.v:45$8'.
     1/6: $2\init[0:0]
     2/6: $2\B[15:0]
     3/6: $2\A[15:0]
     4/6: $1\B[15:0]
     5/6: $1\A[15:0]
     6/6: $1\init[0:0]
Creating decoders for process `\peripheral_mult.$proc$cores/mult/perip_mult.v:29$7'.
     1/2: $2\s[4:0]
     2/2: $1\s[4:0]
Creating decoders for process `\uart_rx.$proc$cores/uart/uart.v:77$222'.
     1/7: $0\rxd_reg[7:0]
     2/7: $0\rx_bitcount[3:0]
     3/7: $0\rx_count16[3:0]
     4/7: $0\rx_busy[0:0]
     5/7: $0\rx_avail[0:0]
     6/7: $0\rx_error[0:0]
     7/7: $0\rx_data[7:0]
Creating decoders for process `\uart_tx.$proc$cores/uart/uart.v:139$215'.
     1/5: $0\txd_reg[7:0]
     2/5: $0\tx_count16[3:0]
     3/5: $0\tx_bitcount[3:0]
     4/5: $0\uart_txd[0:0]
     5/5: $0\tx_busy[0:0]

12.3.8. Executing PROC_DLATCH pass (convert process syncs to latches).
No latch inferred for signal `\peripheral_uart_addr_decoder.\sel' from process `\peripheral_uart_addr_decoder.$proc$cores/uart/perip_uart.v:133$212'.
No latch inferred for signal `\chip_select.\mem_rdata' from process `\chip_select.$proc$chip_select.v:47$51'.
No latch inferred for signal `\chip_select.\cs' from process `\chip_select.$proc$chip_select.v:34$50'.
No latch inferred for signal `\peripheral_mult.\s' from process `\peripheral_mult.$proc$cores/mult/perip_mult.v:29$7'.

12.3.9. Executing PROC_DFF pass (convert process syncs to FFs).
Creating register for signal `\peripheral_uart_register_control.\d_out' using process `\peripheral_uart_register_control.$proc$cores/uart/perip_uart.v:165$211'.
  created $dff cell `$procdff$677' with positive edge clock.
Creating register for signal `\peripheral_uart_register_control.\ledout' using process `\peripheral_uart_register_control.$proc$cores/uart/perip_uart.v:157$208'.
  created $dff cell `$procdff$678' with positive edge clock.
Creating register for signal `\peripheral_uart_register_control.\d_in_uart' using process `\peripheral_uart_register_control.$proc$cores/uart/perip_uart.v:157$208'.
  created $dff cell `$procdff$679' with positive edge clock.
Creating register for signal `\peripheral_uart_register_control.\uart_ctrl' using process `\peripheral_uart_register_control.$proc$cores/uart/perip_uart.v:157$208'.
  created $dff cell `$procdff$680' with positive edge clock.
Creating register for signal `$paramod$1c9b49bacefaeab44db5983aee61d9795015608a\uart.\uart_rxd1' using process `$paramod$1c9b49bacefaeab44db5983aee61d9795015608a\uart.$proc$cores/uart/uart.v:30$207'.
  created $dff cell `$procdff$681' with positive edge clock.
Creating register for signal `$paramod$1c9b49bacefaeab44db5983aee61d9795015608a\uart.\uart_rxd2' using process `$paramod$1c9b49bacefaeab44db5983aee61d9795015608a\uart.$proc$cores/uart/uart.v:30$207'.
  created $dff cell `$procdff$682' with positive edge clock.
Creating register for signal `$paramod$1c9b49bacefaeab44db5983aee61d9795015608a\uart.\enable16_counter' using process `$paramod$1c9b49bacefaeab44db5983aee61d9795015608a\uart.$proc$cores/uart/uart.v:23$204'.
  created $dff cell `$procdff$683' with positive edge clock.
Creating register for signal `\mult.\A' using process `\mult.$proc$cores/mult/mult.v:32$194'.
  created $dff cell `$procdff$686' with positive edge clock.
Creating register for signal `\mult.\B' using process `\mult.$proc$cores/mult/mult.v:32$194'.
  created $dff cell `$procdff$689' with positive edge clock.
Creating register for signal `\mult.\result' using process `\mult.$proc$cores/mult/mult.v:32$194'.
  created $adff cell `$procdff$690' with positive edge clock and positive level reset.
Creating register for signal `\mult.\done' using process `\mult.$proc$cores/mult/mult.v:32$194'.
  created $adff cell `$procdff$691' with positive edge clock and positive level reset.
Creating register for signal `\mult.\state' using process `\mult.$proc$cores/mult/mult.v:32$194'.
  created $adff cell `$procdff$692' with positive edge clock and positive level reset.
Creating register for signal `\mult.\count' using process `\mult.$proc$cores/mult/mult.v:32$194'.
  created $dff cell `$procdff$695' with positive edge clock.
Creating register for signal `\FemtoRV32.\cycles' using process `\FemtoRV32.$proc$cores/cpu/femtorv32_quark.v:380$192'.
  created $dff cell `$procdff$696' with positive edge clock.
Creating register for signal `\FemtoRV32.\rs1' using process `\FemtoRV32.$proc$cores/cpu/femtorv32_quark.v:334$179'.
  created $dff cell `$procdff$697' with positive edge clock.
Creating register for signal `\FemtoRV32.\rs2' using process `\FemtoRV32.$proc$cores/cpu/femtorv32_quark.v:334$179'.
  created $dff cell `$procdff$698' with positive edge clock.
Creating register for signal `\FemtoRV32.\PC' using process `\FemtoRV32.$proc$cores/cpu/femtorv32_quark.v:334$179'.
  created $dff cell `$procdff$699' with positive edge clock.
Creating register for signal `\FemtoRV32.\instr' using process `\FemtoRV32.$proc$cores/cpu/femtorv32_quark.v:334$179'.
  created $dff cell `$procdff$700' with positive edge clock.
Creating register for signal `\FemtoRV32.\state' using process `\FemtoRV32.$proc$cores/cpu/femtorv32_quark.v:334$179'.
  created $dff cell `$procdff$701' with positive edge clock.
Creating register for signal `\FemtoRV32.\aluReg' using process `\FemtoRV32.$proc$cores/cpu/femtorv32_quark.v:153$104'.
  created $dff cell `$procdff$702' with positive edge clock.
Creating register for signal `\FemtoRV32.\aluShamt' using process `\FemtoRV32.$proc$cores/cpu/femtorv32_quark.v:153$104'.
  created $dff cell `$procdff$703' with positive edge clock.
Creating register for signal `\FemtoRV32.$memwr$\registerFile$cores/cpu/femtorv32_quark.v:105$52_ADDR' using process `\FemtoRV32.$proc$cores/cpu/femtorv32_quark.v:102$64'.
  created $dff cell `$procdff$704' with positive edge clock.
Creating register for signal `\FemtoRV32.$memwr$\registerFile$cores/cpu/femtorv32_quark.v:105$52_DATA' using process `\FemtoRV32.$proc$cores/cpu/femtorv32_quark.v:102$64'.
  created $dff cell `$procdff$705' with positive edge clock.
Creating register for signal `\FemtoRV32.$memwr$\registerFile$cores/cpu/femtorv32_quark.v:105$52_EN' using process `\FemtoRV32.$proc$cores/cpu/femtorv32_quark.v:102$64'.
  created $dff cell `$procdff$706' with positive edge clock.
Creating register for signal `\Memory.\mem_rdata' using process `\Memory.$proc$cores/memory/Memory.v:19$22'.
  created $dff cell `$procdff$707' with positive edge clock.
Creating register for signal `\Memory.$memwr$\MEM$cores/memory/Memory.v:23$18_ADDR' using process `\Memory.$proc$cores/memory/Memory.v:19$22'.
  created $dff cell `$procdff$708' with positive edge clock.
Creating register for signal `\Memory.$memwr$\MEM$cores/memory/Memory.v:23$18_DATA' using process `\Memory.$proc$cores/memory/Memory.v:19$22'.
  created $dff cell `$procdff$709' with positive edge clock.
Creating register for signal `\Memory.$memwr$\MEM$cores/memory/Memory.v:23$18_EN' using process `\Memory.$proc$cores/memory/Memory.v:19$22'.
  created $dff cell `$procdff$710' with positive edge clock.
Creating register for signal `\Memory.$memwr$\MEM$cores/memory/Memory.v:24$19_ADDR' using process `\Memory.$proc$cores/memory/Memory.v:19$22'.
  created $dff cell `$procdff$711' with positive edge clock.
Creating register for signal `\Memory.$memwr$\MEM$cores/memory/Memory.v:24$19_DATA' using process `\Memory.$proc$cores/memory/Memory.v:19$22'.
  created $dff cell `$procdff$712' with positive edge clock.
Creating register for signal `\Memory.$memwr$\MEM$cores/memory/Memory.v:24$19_EN' using process `\Memory.$proc$cores/memory/Memory.v:19$22'.
  created $dff cell `$procdff$713' with positive edge clock.
Creating register for signal `\Memory.$memwr$\MEM$cores/memory/Memory.v:25$20_ADDR' using process `\Memory.$proc$cores/memory/Memory.v:19$22'.
  created $dff cell `$procdff$714' with positive edge clock.
Creating register for signal `\Memory.$memwr$\MEM$cores/memory/Memory.v:25$20_DATA' using process `\Memory.$proc$cores/memory/Memory.v:19$22'.
  created $dff cell `$procdff$715' with positive edge clock.
Creating register for signal `\Memory.$memwr$\MEM$cores/memory/Memory.v:25$20_EN' using process `\Memory.$proc$cores/memory/Memory.v:19$22'.
  created $dff cell `$procdff$716' with positive edge clock.
Creating register for signal `\Memory.$memwr$\MEM$cores/memory/Memory.v:26$21_ADDR' using process `\Memory.$proc$cores/memory/Memory.v:19$22'.
  created $dff cell `$procdff$717' with positive edge clock.
Creating register for signal `\Memory.$memwr$\MEM$cores/memory/Memory.v:26$21_DATA' using process `\Memory.$proc$cores/memory/Memory.v:19$22'.
  created $dff cell `$procdff$718' with positive edge clock.
Creating register for signal `\Memory.$memwr$\MEM$cores/memory/Memory.v:26$21_EN' using process `\Memory.$proc$cores/memory/Memory.v:19$22'.
  created $dff cell `$procdff$719' with positive edge clock.
Creating register for signal `\perip_laser.\d_out' using process `\perip_laser.$proc$cores/laser/perip_laser.v:14$15'.
  created $dff cell `$procdff$720' with positive edge clock.
Creating register for signal `\peripheral_mult.\d_out' using process `\peripheral_mult.$proc$cores/mult/perip_mult.v:62$13'.
  created $dff cell `$procdff$721' with positive edge clock.
Creating register for signal `\peripheral_mult.\A' using process `\peripheral_mult.$proc$cores/mult/perip_mult.v:45$8'.
  created $dff cell `$procdff$722' with positive edge clock.
Creating register for signal `\peripheral_mult.\B' using process `\peripheral_mult.$proc$cores/mult/perip_mult.v:45$8'.
  created $dff cell `$procdff$723' with positive edge clock.
Creating register for signal `\peripheral_mult.\init' using process `\peripheral_mult.$proc$cores/mult/perip_mult.v:45$8'.
  created $dff cell `$procdff$724' with positive edge clock.
Creating register for signal `\uart_rx.\rx_data' using process `\uart_rx.$proc$cores/uart/uart.v:77$222'.
  created $dff cell `$procdff$725' with positive edge clock.
Creating register for signal `\uart_rx.\rx_error' using process `\uart_rx.$proc$cores/uart/uart.v:77$222'.
  created $dff cell `$procdff$726' with positive edge clock.
Creating register for signal `\uart_rx.\rx_avail' using process `\uart_rx.$proc$cores/uart/uart.v:77$222'.
  created $dff cell `$procdff$727' with positive edge clock.
Creating register for signal `\uart_rx.\rx_busy' using process `\uart_rx.$proc$cores/uart/uart.v:77$222'.
  created $dff cell `$procdff$728' with positive edge clock.
Creating register for signal `\uart_rx.\rx_count16' using process `\uart_rx.$proc$cores/uart/uart.v:77$222'.
  created $dff cell `$procdff$729' with positive edge clock.
Creating register for signal `\uart_rx.\rx_bitcount' using process `\uart_rx.$proc$cores/uart/uart.v:77$222'.
  created $dff cell `$procdff$730' with positive edge clock.
Creating register for signal `\uart_rx.\rxd_reg' using process `\uart_rx.$proc$cores/uart/uart.v:77$222'.
  created $dff cell `$procdff$731' with positive edge clock.
Creating register for signal `\uart_tx.\tx_busy' using process `\uart_tx.$proc$cores/uart/uart.v:139$215'.
  created $dff cell `$procdff$732' with positive edge clock.
Creating register for signal `\uart_tx.\uart_txd' using process `\uart_tx.$proc$cores/uart/uart.v:139$215'.
  created $dff cell `$procdff$733' with positive edge clock.
Creating register for signal `\uart_tx.\tx_bitcount' using process `\uart_tx.$proc$cores/uart/uart.v:139$215'.
  created $dff cell `$procdff$734' with positive edge clock.
Creating register for signal `\uart_tx.\tx_count16' using process `\uart_tx.$proc$cores/uart/uart.v:139$215'.
  created $dff cell `$procdff$735' with positive edge clock.
Creating register for signal `\uart_tx.\txd_reg' using process `\uart_tx.$proc$cores/uart/uart.v:139$215'.
  created $dff cell `$procdff$736' with positive edge clock.

12.3.10. Executing PROC_MEMWR pass (convert process memory writes to cells).

12.3.11. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Found and cleaned up 1 empty switch in `\peripheral_uart_addr_decoder.$proc$cores/uart/perip_uart.v:133$212'.
Removing empty process `peripheral_uart_addr_decoder.$proc$cores/uart/perip_uart.v:133$212'.
Found and cleaned up 1 empty switch in `\peripheral_uart_register_control.$proc$cores/uart/perip_uart.v:165$211'.
Removing empty process `peripheral_uart_register_control.$proc$cores/uart/perip_uart.v:165$211'.
Found and cleaned up 2 empty switches in `\peripheral_uart_register_control.$proc$cores/uart/perip_uart.v:157$208'.
Removing empty process `peripheral_uart_register_control.$proc$cores/uart/perip_uart.v:157$208'.
Removing empty process `$paramod$1c9b49bacefaeab44db5983aee61d9795015608a\uart.$proc$cores/uart/uart.v:30$207'.
Found and cleaned up 1 empty switch in `$paramod$1c9b49bacefaeab44db5983aee61d9795015608a\uart.$proc$cores/uart/uart.v:23$204'.
Removing empty process `$paramod$1c9b49bacefaeab44db5983aee61d9795015608a\uart.$proc$cores/uart/uart.v:23$204'.
Removing empty process `mult.$proc$cores/mult/mult.v:0$202'.
Found and cleaned up 4 empty switches in `\mult.$proc$cores/mult/mult.v:32$194'.
Removing empty process `mult.$proc$cores/mult/mult.v:32$194'.
Removing empty process `FemtoRV32.$proc$cores/cpu/femtorv32_quark.v:380$192'.
Found and cleaned up 4 empty switches in `\FemtoRV32.$proc$cores/cpu/femtorv32_quark.v:334$179'.
Removing empty process `FemtoRV32.$proc$cores/cpu/femtorv32_quark.v:334$179'.
Found and cleaned up 3 empty switches in `\FemtoRV32.$proc$cores/cpu/femtorv32_quark.v:153$104'.
Removing empty process `FemtoRV32.$proc$cores/cpu/femtorv32_quark.v:153$104'.
Found and cleaned up 2 empty switches in `\FemtoRV32.$proc$cores/cpu/femtorv32_quark.v:102$64'.
Removing empty process `FemtoRV32.$proc$cores/cpu/femtorv32_quark.v:102$64'.
Found and cleaned up 1 empty switch in `\chip_select.$proc$chip_select.v:47$51'.
Removing empty process `chip_select.$proc$chip_select.v:47$51'.
Found and cleaned up 1 empty switch in `\chip_select.$proc$chip_select.v:34$50'.
Removing empty process `chip_select.$proc$chip_select.v:34$50'.
Found and cleaned up 5 empty switches in `\Memory.$proc$cores/memory/Memory.v:19$22'.
Removing empty process `Memory.$proc$cores/memory/Memory.v:19$22'.
Found and cleaned up 3 empty switches in `\perip_laser.$proc$cores/laser/perip_laser.v:14$15'.
Removing empty process `perip_laser.$proc$cores/laser/perip_laser.v:14$15'.
Found and cleaned up 3 empty switches in `\peripheral_mult.$proc$cores/mult/perip_mult.v:62$13'.
Removing empty process `peripheral_mult.$proc$cores/mult/perip_mult.v:62$13'.
Found and cleaned up 2 empty switches in `\peripheral_mult.$proc$cores/mult/perip_mult.v:45$8'.
Removing empty process `peripheral_mult.$proc$cores/mult/perip_mult.v:45$8'.
Found and cleaned up 2 empty switches in `\peripheral_mult.$proc$cores/mult/perip_mult.v:29$7'.
Removing empty process `peripheral_mult.$proc$cores/mult/perip_mult.v:29$7'.
Found and cleaned up 9 empty switches in `\uart_rx.$proc$cores/uart/uart.v:77$222'.
Removing empty process `uart_rx.$proc$cores/uart/uart.v:77$222'.
Found and cleaned up 5 empty switches in `\uart_tx.$proc$cores/uart/uart.v:139$215'.
Removing empty process `uart_tx.$proc$cores/uart/uart.v:139$215'.
Cleaned up 49 empty switches.

12.3.12. Executing OPT_EXPR pass (perform const folding).
Optimizing module peripheral_uart_addr_decoder.
Optimizing module peripheral_uart_register_control.
Optimizing module $paramod$1c9b49bacefaeab44db5983aee61d9795015608a\uart.
Optimizing module mult.
Optimizing module FemtoRV32.
Optimizing module chip_select.
Optimizing module Memory.
Optimizing module $paramod$e358107493866f19ba52d8dda1c67d080e76663e\peripheral_uart.
Optimizing module perip_laser.
Optimizing module peripheral_mult.
Optimizing module SOC.
Optimizing module uart_rx.
Optimizing module uart_tx.

12.4. Executing OPT_EXPR pass (perform const folding).
Optimizing module peripheral_uart_addr_decoder.
Optimizing module peripheral_uart_register_control.
Optimizing module $paramod$1c9b49bacefaeab44db5983aee61d9795015608a\uart.
Optimizing module mult.
Optimizing module FemtoRV32.
Optimizing module chip_select.
Optimizing module Memory.
Optimizing module $paramod$e358107493866f19ba52d8dda1c67d080e76663e\peripheral_uart.
Optimizing module perip_laser.
Optimizing module peripheral_mult.
Optimizing module SOC.
Optimizing module uart_rx.
Optimizing module uart_tx.

12.5. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \peripheral_uart_addr_decoder..
Finding unused cells or wires in module \peripheral_uart_register_control..
Finding unused cells or wires in module $paramod$1c9b49bacefaeab44db5983aee61d9795015608a\uart..
Finding unused cells or wires in module \mult..
Finding unused cells or wires in module \FemtoRV32..
Finding unused cells or wires in module \chip_select..
Finding unused cells or wires in module \Memory..
Finding unused cells or wires in module $paramod$e358107493866f19ba52d8dda1c67d080e76663e\peripheral_uart..
Finding unused cells or wires in module \perip_laser..
Finding unused cells or wires in module \peripheral_mult..
Finding unused cells or wires in module \SOC..
Finding unused cells or wires in module \uart_rx..
Finding unused cells or wires in module \uart_tx..
Removed 19 unused cells and 302 unused wires.

12.6. Executing CHECK pass (checking for obvious problems).
Checking module $paramod$1c9b49bacefaeab44db5983aee61d9795015608a\uart...
Checking module $paramod$e358107493866f19ba52d8dda1c67d080e76663e\peripheral_uart...
Checking module FemtoRV32...
Checking module Memory...
Checking module SOC...
Checking module chip_select...
Checking module mult...
Checking module perip_laser...
Checking module peripheral_mult...
Checking module peripheral_uart_addr_decoder...
Checking module peripheral_uart_register_control...
Checking module uart_rx...
Checking module uart_tx...
Found and reported 0 problems.

12.7. Executing OPT pass (performing simple optimizations).

12.7.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module $paramod$1c9b49bacefaeab44db5983aee61d9795015608a\uart.
Optimizing module $paramod$e358107493866f19ba52d8dda1c67d080e76663e\peripheral_uart.
Optimizing module FemtoRV32.
Optimizing module Memory.
Optimizing module SOC.
Optimizing module chip_select.
Optimizing module mult.
Optimizing module perip_laser.
Optimizing module peripheral_mult.
Optimizing module peripheral_uart_addr_decoder.
Optimizing module peripheral_uart_register_control.
Optimizing module uart_rx.
Optimizing module uart_tx.

12.7.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `$paramod$1c9b49bacefaeab44db5983aee61d9795015608a\uart'.
Finding identical cells in module `$paramod$e358107493866f19ba52d8dda1c67d080e76663e\peripheral_uart'.
Finding identical cells in module `\FemtoRV32'.
Finding identical cells in module `\Memory'.
Finding identical cells in module `\SOC'.
Finding identical cells in module `\chip_select'.
Finding identical cells in module `\mult'.
Finding identical cells in module `\perip_laser'.
Finding identical cells in module `\peripheral_mult'.
Finding identical cells in module `\peripheral_uart_addr_decoder'.
Finding identical cells in module `\peripheral_uart_register_control'.
Finding identical cells in module `\uart_rx'.
Finding identical cells in module `\uart_tx'.
Removed a total of 29 cells.

12.7.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module $paramod$1c9b49bacefaeab44db5983aee61d9795015608a\uart..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module $paramod$e358107493866f19ba52d8dda1c67d080e76663e\peripheral_uart..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \FemtoRV32..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
      Replacing known input bits on port A of cell $procmux$309: \state -> { 3'100 \state [0] }
      Replacing known input bits on port B of cell $procmux$314: \state -> { 3'001 \state [0] }
  Analyzing evaluation results.
    dead port 2/2 on $mux $procmux$373.
    dead port 2/2 on $mux $procmux$379.
    dead port 2/2 on $mux $procmux$385.
Running muxtree optimizer on module \Memory..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \SOC..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \chip_select..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \mult..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
    dead port 2/2 on $mux $procmux$258.
    dead port 2/2 on $mux $procmux$269.
    dead port 2/2 on $mux $procmux$249.
Running muxtree optimizer on module \perip_laser..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \peripheral_mult..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
    dead port 2/2 on $mux $procmux$463.
    dead port 1/2 on $mux $procmux$466.
    dead port 1/2 on $mux $procmux$472.
    dead port 1/2 on $mux $procmux$481.
    dead port 1/2 on $mux $procmux$487.
    dead port 1/2 on $mux $procmux$493.
    dead port 2/2 on $mux $procmux$512.
Running muxtree optimizer on module \peripheral_uart_addr_decoder..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \peripheral_uart_register_control..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \uart_rx..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
      Replacing known input bits on port A of cell $procmux$559: \rx_busy -> 1'1
      Replacing known input bits on port A of cell $procmux$554: \rx_busy -> 1'1
      Replacing known input bits on port A of cell $procmux$556: \rx_busy -> 1'1
      Replacing known input bits on port B of cell $procmux$562: \rx_busy -> 1'0
  Analyzing evaluation results.
Running muxtree optimizer on module \uart_tx..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 13 multiplexer ports.

12.7.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module $paramod$1c9b49bacefaeab44db5983aee61d9795015608a\uart.
  Optimizing cells in module $paramod$e358107493866f19ba52d8dda1c67d080e76663e\peripheral_uart.
  Optimizing cells in module \FemtoRV32.
    Consolidated identical input bits for $mux cell $procmux$371:
      Old ports: A=0, B=32'11111111111111111111111111111111, Y=$procmux$371_Y
      New ports: A=1'0, B=1'1, Y=$procmux$371_Y [0]
      New connections: $procmux$371_Y [31:1] = { $procmux$371_Y [0] $procmux$371_Y [0] $procmux$371_Y [0] $procmux$371_Y [0] $procmux$371_Y [0] $procmux$371_Y [0] $procmux$371_Y [0] $procmux$371_Y [0] $procmux$371_Y [0] $procmux$371_Y [0] $procmux$371_Y [0] $procmux$371_Y [0] $procmux$371_Y [0] $procmux$371_Y [0] $procmux$371_Y [0] $procmux$371_Y [0] $procmux$371_Y [0] $procmux$371_Y [0] $procmux$371_Y [0] $procmux$371_Y [0] $procmux$371_Y [0] $procmux$371_Y [0] $procmux$371_Y [0] $procmux$371_Y [0] $procmux$371_Y [0] $procmux$371_Y [0] $procmux$371_Y [0] $procmux$371_Y [0] $procmux$371_Y [0] $procmux$371_Y [0] $procmux$371_Y [0] }
  Optimizing cells in module \FemtoRV32.
    Consolidated identical input bits for $mux cell $procmux$388:
      Old ports: A=0, B=$2$memwr$\registerFile$cores/cpu/femtorv32_quark.v:105$52_EN[31:0]$74, Y=$0$memwr$\registerFile$cores/cpu/femtorv32_quark.v:105$52_EN[31:0]$67
      New ports: A=1'0, B=$procmux$371_Y [0], Y=$0$memwr$\registerFile$cores/cpu/femtorv32_quark.v:105$52_EN[31:0]$67 [0]
      New connections: $0$memwr$\registerFile$cores/cpu/femtorv32_quark.v:105$52_EN[31:0]$67 [31:1] = { $0$memwr$\registerFile$cores/cpu/femtorv32_quark.v:105$52_EN[31:0]$67 [0] $0$memwr$\registerFile$cores/cpu/femtorv32_quark.v:105$52_EN[31:0]$67 [0] $0$memwr$\registerFile$cores/cpu/femtorv32_quark.v:105$52_EN[31:0]$67 [0] $0$memwr$\registerFile$cores/cpu/femtorv32_quark.v:105$52_EN[31:0]$67 [0] $0$memwr$\registerFile$cores/cpu/femtorv32_quark.v:105$52_EN[31:0]$67 [0] $0$memwr$\registerFile$cores/cpu/femtorv32_quark.v:105$52_EN[31:0]$67 [0] $0$memwr$\registerFile$cores/cpu/femtorv32_quark.v:105$52_EN[31:0]$67 [0] $0$memwr$\registerFile$cores/cpu/femtorv32_quark.v:105$52_EN[31:0]$67 [0] $0$memwr$\registerFile$cores/cpu/femtorv32_quark.v:105$52_EN[31:0]$67 [0] $0$memwr$\registerFile$cores/cpu/femtorv32_quark.v:105$52_EN[31:0]$67 [0] $0$memwr$\registerFile$cores/cpu/femtorv32_quark.v:105$52_EN[31:0]$67 [0] $0$memwr$\registerFile$cores/cpu/femtorv32_quark.v:105$52_EN[31:0]$67 [0] $0$memwr$\registerFile$cores/cpu/femtorv32_quark.v:105$52_EN[31:0]$67 [0] $0$memwr$\registerFile$cores/cpu/femtorv32_quark.v:105$52_EN[31:0]$67 [0] $0$memwr$\registerFile$cores/cpu/femtorv32_quark.v:105$52_EN[31:0]$67 [0] $0$memwr$\registerFile$cores/cpu/femtorv32_quark.v:105$52_EN[31:0]$67 [0] $0$memwr$\registerFile$cores/cpu/femtorv32_quark.v:105$52_EN[31:0]$67 [0] $0$memwr$\registerFile$cores/cpu/femtorv32_quark.v:105$52_EN[31:0]$67 [0] $0$memwr$\registerFile$cores/cpu/femtorv32_quark.v:105$52_EN[31:0]$67 [0] $0$memwr$\registerFile$cores/cpu/femtorv32_quark.v:105$52_EN[31:0]$67 [0] $0$memwr$\registerFile$cores/cpu/femtorv32_quark.v:105$52_EN[31:0]$67 [0] $0$memwr$\registerFile$cores/cpu/femtorv32_quark.v:105$52_EN[31:0]$67 [0] $0$memwr$\registerFile$cores/cpu/femtorv32_quark.v:105$52_EN[31:0]$67 [0] $0$memwr$\registerFile$cores/cpu/femtorv32_quark.v:105$52_EN[31:0]$67 [0] $0$memwr$\registerFile$cores/cpu/femtorv32_quark.v:105$52_EN[31:0]$67 [0] $0$memwr$\registerFile$cores/cpu/femtorv32_quark.v:105$52_EN[31:0]$67 [0] $0$memwr$\registerFile$cores/cpu/femtorv32_quark.v:105$52_EN[31:0]$67 [0] $0$memwr$\registerFile$cores/cpu/femtorv32_quark.v:105$52_EN[31:0]$67 [0] $0$memwr$\registerFile$cores/cpu/femtorv32_quark.v:105$52_EN[31:0]$67 [0] $0$memwr$\registerFile$cores/cpu/femtorv32_quark.v:105$52_EN[31:0]$67 [0] $0$memwr$\registerFile$cores/cpu/femtorv32_quark.v:105$52_EN[31:0]$67 [0] }
  Optimizing cells in module \FemtoRV32.
  Optimizing cells in module \Memory.
    Consolidated identical input bits for $mux cell $procmux$414:
      Old ports: A=0, B=32'11111111000000000000000000000000, Y=$0$memwr$\MEM$cores/memory/Memory.v:26$21_EN[31:0]$34
      New ports: A=1'0, B=1'1, Y=$0$memwr$\MEM$cores/memory/Memory.v:26$21_EN[31:0]$34 [24]
      New connections: { $0$memwr$\MEM$cores/memory/Memory.v:26$21_EN[31:0]$34 [31:25] $0$memwr$\MEM$cores/memory/Memory.v:26$21_EN[31:0]$34 [23:0] } = { $0$memwr$\MEM$cores/memory/Memory.v:26$21_EN[31:0]$34 [24] $0$memwr$\MEM$cores/memory/Memory.v:26$21_EN[31:0]$34 [24] $0$memwr$\MEM$cores/memory/Memory.v:26$21_EN[31:0]$34 [24] $0$memwr$\MEM$cores/memory/Memory.v:26$21_EN[31:0]$34 [24] $0$memwr$\MEM$cores/memory/Memory.v:26$21_EN[31:0]$34 [24] $0$memwr$\MEM$cores/memory/Memory.v:26$21_EN[31:0]$34 [24] $0$memwr$\MEM$cores/memory/Memory.v:26$21_EN[31:0]$34 [24] 24'000000000000000000000000 }
    Consolidated identical input bits for $mux cell $procmux$423:
      Old ports: A=0, B=16711680, Y=$0$memwr$\MEM$cores/memory/Memory.v:25$20_EN[31:0]$31
      New ports: A=1'0, B=1'1, Y=$0$memwr$\MEM$cores/memory/Memory.v:25$20_EN[31:0]$31 [16]
      New connections: { $0$memwr$\MEM$cores/memory/Memory.v:25$20_EN[31:0]$31 [31:17] $0$memwr$\MEM$cores/memory/Memory.v:25$20_EN[31:0]$31 [15:0] } = { 8'00000000 $0$memwr$\MEM$cores/memory/Memory.v:25$20_EN[31:0]$31 [16] $0$memwr$\MEM$cores/memory/Memory.v:25$20_EN[31:0]$31 [16] $0$memwr$\MEM$cores/memory/Memory.v:25$20_EN[31:0]$31 [16] $0$memwr$\MEM$cores/memory/Memory.v:25$20_EN[31:0]$31 [16] $0$memwr$\MEM$cores/memory/Memory.v:25$20_EN[31:0]$31 [16] $0$memwr$\MEM$cores/memory/Memory.v:25$20_EN[31:0]$31 [16] $0$memwr$\MEM$cores/memory/Memory.v:25$20_EN[31:0]$31 [16] 16'0000000000000000 }
    Consolidated identical input bits for $mux cell $procmux$432:
      Old ports: A=0, B=65280, Y=$0$memwr$\MEM$cores/memory/Memory.v:24$19_EN[31:0]$28
      New ports: A=1'0, B=1'1, Y=$0$memwr$\MEM$cores/memory/Memory.v:24$19_EN[31:0]$28 [8]
      New connections: { $0$memwr$\MEM$cores/memory/Memory.v:24$19_EN[31:0]$28 [31:9] $0$memwr$\MEM$cores/memory/Memory.v:24$19_EN[31:0]$28 [7:0] } = { 16'0000000000000000 $0$memwr$\MEM$cores/memory/Memory.v:24$19_EN[31:0]$28 [8] $0$memwr$\MEM$cores/memory/Memory.v:24$19_EN[31:0]$28 [8] $0$memwr$\MEM$cores/memory/Memory.v:24$19_EN[31:0]$28 [8] $0$memwr$\MEM$cores/memory/Memory.v:24$19_EN[31:0]$28 [8] $0$memwr$\MEM$cores/memory/Memory.v:24$19_EN[31:0]$28 [8] $0$memwr$\MEM$cores/memory/Memory.v:24$19_EN[31:0]$28 [8] $0$memwr$\MEM$cores/memory/Memory.v:24$19_EN[31:0]$28 [8] 8'00000000 }
    Consolidated identical input bits for $mux cell $procmux$441:
      Old ports: A=0, B=255, Y=$0$memwr$\MEM$cores/memory/Memory.v:23$18_EN[31:0]$25
      New ports: A=1'0, B=1'1, Y=$0$memwr$\MEM$cores/memory/Memory.v:23$18_EN[31:0]$25 [0]
      New connections: $0$memwr$\MEM$cores/memory/Memory.v:23$18_EN[31:0]$25 [31:1] = { 24'000000000000000000000000 $0$memwr$\MEM$cores/memory/Memory.v:23$18_EN[31:0]$25 [0] $0$memwr$\MEM$cores/memory/Memory.v:23$18_EN[31:0]$25 [0] $0$memwr$\MEM$cores/memory/Memory.v:23$18_EN[31:0]$25 [0] $0$memwr$\MEM$cores/memory/Memory.v:23$18_EN[31:0]$25 [0] $0$memwr$\MEM$cores/memory/Memory.v:23$18_EN[31:0]$25 [0] $0$memwr$\MEM$cores/memory/Memory.v:23$18_EN[31:0]$25 [0] $0$memwr$\MEM$cores/memory/Memory.v:23$18_EN[31:0]$25 [0] }
  Optimizing cells in module \Memory.
  Optimizing cells in module \SOC.
  Optimizing cells in module \chip_select.
  Optimizing cells in module \mult.
    New ctrl vector for $pmux cell $procmux$281: { $auto$opt_reduce.cc:134:opt_pmux$743 $procmux$274_CMP }
    New ctrl vector for $pmux cell $procmux$286: { $auto$opt_reduce.cc:134:opt_pmux$745 $procmux$273_CMP }
  Optimizing cells in module \mult.
  Optimizing cells in module \perip_laser.
  Optimizing cells in module \peripheral_mult.
  Optimizing cells in module \peripheral_uart_addr_decoder.
  Optimizing cells in module \peripheral_uart_register_control.
  Optimizing cells in module \uart_rx.
    New ctrl vector for $pmux cell $procmux$518: $auto$opt_reduce.cc:134:opt_pmux$747
  Optimizing cells in module \uart_rx.
  Optimizing cells in module \uart_tx.
    New ctrl vector for $pmux cell $procmux$626: $auto$opt_reduce.cc:134:opt_pmux$749
    New ctrl vector for $pmux cell $procmux$654: { $procmux$629_CMP $auto$opt_reduce.cc:134:opt_pmux$751 }
  Optimizing cells in module \uart_tx.
Performed a total of 11 changes.

12.7.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `$paramod$1c9b49bacefaeab44db5983aee61d9795015608a\uart'.
Finding identical cells in module `$paramod$e358107493866f19ba52d8dda1c67d080e76663e\peripheral_uart'.
Finding identical cells in module `\FemtoRV32'.
Finding identical cells in module `\Memory'.
Finding identical cells in module `\SOC'.
Finding identical cells in module `\chip_select'.
Finding identical cells in module `\mult'.
Finding identical cells in module `\perip_laser'.
Finding identical cells in module `\peripheral_mult'.
Finding identical cells in module `\peripheral_uart_addr_decoder'.
Finding identical cells in module `\peripheral_uart_register_control'.
Finding identical cells in module `\uart_rx'.
Finding identical cells in module `\uart_tx'.
Removed a total of 2 cells.

12.7.6. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module $paramod$1c9b49bacefaeab44db5983aee61d9795015608a\uart..
Finding unused cells or wires in module $paramod$e358107493866f19ba52d8dda1c67d080e76663e\peripheral_uart..
Finding unused cells or wires in module \FemtoRV32..
Finding unused cells or wires in module \Memory..
Finding unused cells or wires in module \SOC..
Finding unused cells or wires in module \chip_select..
Finding unused cells or wires in module \mult..
Finding unused cells or wires in module \perip_laser..
Finding unused cells or wires in module \peripheral_mult..
Finding unused cells or wires in module \peripheral_uart_addr_decoder..
Finding unused cells or wires in module \peripheral_uart_register_control..
Finding unused cells or wires in module \uart_rx..
Finding unused cells or wires in module \uart_tx..
Removed 0 unused cells and 44 unused wires.

12.7.7. Executing OPT_EXPR pass (perform const folding).
Optimizing module $paramod$1c9b49bacefaeab44db5983aee61d9795015608a\uart.
Optimizing module $paramod$e358107493866f19ba52d8dda1c67d080e76663e\peripheral_uart.
Optimizing module FemtoRV32.
Optimizing module Memory.
Optimizing module SOC.
Optimizing module chip_select.
Optimizing module mult.
Optimizing module perip_laser.
Optimizing module peripheral_mult.
Optimizing module peripheral_uart_addr_decoder.
Optimizing module peripheral_uart_register_control.
Optimizing module uart_rx.
Optimizing module uart_tx.

12.7.8. Rerunning OPT passes. (Maybe there is more to do..)

12.7.9. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module $paramod$1c9b49bacefaeab44db5983aee61d9795015608a\uart..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module $paramod$e358107493866f19ba52d8dda1c67d080e76663e\peripheral_uart..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \FemtoRV32..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \Memory..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \SOC..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \chip_select..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \mult..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \perip_laser..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \peripheral_mult..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \peripheral_uart_addr_decoder..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \peripheral_uart_register_control..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \uart_rx..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \uart_tx..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.

12.7.10. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module $paramod$1c9b49bacefaeab44db5983aee61d9795015608a\uart.
  Optimizing cells in module $paramod$e358107493866f19ba52d8dda1c67d080e76663e\peripheral_uart.
  Optimizing cells in module \FemtoRV32.
  Optimizing cells in module \Memory.
  Optimizing cells in module \SOC.
  Optimizing cells in module \chip_select.
  Optimizing cells in module \mult.
  Optimizing cells in module \perip_laser.
  Optimizing cells in module \peripheral_mult.
  Optimizing cells in module \peripheral_uart_addr_decoder.
  Optimizing cells in module \peripheral_uart_register_control.
  Optimizing cells in module \uart_rx.
  Optimizing cells in module \uart_tx.
Performed a total of 0 changes.

12.7.11. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `$paramod$1c9b49bacefaeab44db5983aee61d9795015608a\uart'.
Finding identical cells in module `$paramod$e358107493866f19ba52d8dda1c67d080e76663e\peripheral_uart'.
Finding identical cells in module `\FemtoRV32'.
Finding identical cells in module `\Memory'.
Finding identical cells in module `\SOC'.
Finding identical cells in module `\chip_select'.
Finding identical cells in module `\mult'.
Finding identical cells in module `\perip_laser'.
Finding identical cells in module `\peripheral_mult'.
Finding identical cells in module `\peripheral_uart_addr_decoder'.
Finding identical cells in module `\peripheral_uart_register_control'.
Finding identical cells in module `\uart_rx'.
Finding identical cells in module `\uart_tx'.
Removed a total of 0 cells.

12.7.12. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module $paramod$1c9b49bacefaeab44db5983aee61d9795015608a\uart..
Finding unused cells or wires in module $paramod$e358107493866f19ba52d8dda1c67d080e76663e\peripheral_uart..
Finding unused cells or wires in module \FemtoRV32..
Finding unused cells or wires in module \Memory..
Finding unused cells or wires in module \SOC..
Finding unused cells or wires in module \chip_select..
Finding unused cells or wires in module \mult..
Finding unused cells or wires in module \perip_laser..
Finding unused cells or wires in module \peripheral_mult..
Finding unused cells or wires in module \peripheral_uart_addr_decoder..
Finding unused cells or wires in module \peripheral_uart_register_control..
Finding unused cells or wires in module \uart_rx..
Finding unused cells or wires in module \uart_tx..

12.7.13. Executing OPT_EXPR pass (perform const folding).
Optimizing module $paramod$1c9b49bacefaeab44db5983aee61d9795015608a\uart.
Optimizing module $paramod$e358107493866f19ba52d8dda1c67d080e76663e\peripheral_uart.
Optimizing module FemtoRV32.
Optimizing module Memory.
Optimizing module SOC.
Optimizing module chip_select.
Optimizing module mult.
Optimizing module perip_laser.
Optimizing module peripheral_mult.
Optimizing module peripheral_uart_addr_decoder.
Optimizing module peripheral_uart_register_control.
Optimizing module uart_rx.
Optimizing module uart_tx.

12.7.14. Finished OPT passes. (There is nothing left to do.)

12.8. Executing WREDUCE pass (reducing word size of cells).
Removed top 31 bits (of 32) from port B of cell $paramod$1c9b49bacefaeab44db5983aee61d9795015608a\uart.$sub$cores/uart/uart.v:25$205 ($sub).
Removed top 25 bits (of 32) from port Y of cell $paramod$1c9b49bacefaeab44db5983aee61d9795015608a\uart.$sub$cores/uart/uart.v:25$205 ($sub).
Removed top 26 bits (of 32) from mux cell $paramod$1c9b49bacefaeab44db5983aee61d9795015608a\uart.$ternary$cores/uart/uart.v:25$206 ($mux).
Removed top 1 bits (of 7) from port Y of cell $paramod$1c9b49bacefaeab44db5983aee61d9795015608a\uart.$sub$cores/uart/uart.v:25$205 ($sub).
Removed top 26 bits (of 32) from wire $paramod$1c9b49bacefaeab44db5983aee61d9795015608a\uart.$sub$cores/uart/uart.v:25$205_Y.
Removed top 7 bits (of 8) from port A of cell FemtoRV32.$shl$cores/cpu/femtorv32_quark.v:68$53 ($shl).
Removed top 2 bits (of 5) from port B of cell FemtoRV32.$eq$cores/cpu/femtorv32_quark.v:81$55 ($eq).
Removed top 1 bits (of 5) from port B of cell FemtoRV32.$eq$cores/cpu/femtorv32_quark.v:82$56 ($eq).
Removed top 1 bits (of 5) from port B of cell FemtoRV32.$eq$cores/cpu/femtorv32_quark.v:83$57 ($eq).
Removed top 1 bits (of 5) from port B of cell FemtoRV32.$eq$cores/cpu/femtorv32_quark.v:87$60 ($eq).
Removed top 2 bits (of 5) from port B of cell FemtoRV32.$eq$cores/cpu/femtorv32_quark.v:88$61 ($eq).
Removed top 1 bits (of 33) from port B of cell FemtoRV32.$add$cores/cpu/femtorv32_quark.v:131$80 ($add).
Removed top 32 bits (of 33) from port B of cell FemtoRV32.$add$cores/cpu/femtorv32_quark.v:131$81 ($add).
Removed top 31 bits (of 32) from mux cell FemtoRV32.$ternary$cores/cpu/femtorv32_quark.v:144$88 ($mux).
Removed top 31 bits (of 32) from port B of cell FemtoRV32.$or$cores/cpu/femtorv32_quark.v:143$89 ($or).
Removed top 31 bits (of 32) from mux cell FemtoRV32.$ternary$cores/cpu/femtorv32_quark.v:145$90 ($mux).
Removed top 31 bits (of 32) from port B of cell FemtoRV32.$or$cores/cpu/femtorv32_quark.v:143$91 ($or).
Removed top 31 bits (of 32) from port B of cell FemtoRV32.$sub$cores/cpu/femtorv32_quark.v:174$106 ($sub).
Removed top 27 bits (of 32) from port Y of cell FemtoRV32.$sub$cores/cpu/femtorv32_quark.v:174$106 ($sub).
Removed top 29 bits (of 32) from port B of cell FemtoRV32.$add$cores/cpu/femtorv32_quark.v:200$124 ($add).
Removed top 8 bits (of 32) from port Y of cell FemtoRV32.$add$cores/cpu/femtorv32_quark.v:200$124 ($add).
Removed top 19 bits (of 24) from mux cell FemtoRV32.$ternary$cores/cpu/femtorv32_quark.v:212$128 ($mux).
Removed top 8 bits (of 32) from mux cell FemtoRV32.$ternary$cores/cpu/femtorv32_quark.v:229$138 ($mux).
Removed top 8 bits (of 32) from port B of cell FemtoRV32.$or$cores/cpu/femtorv32_quark.v:226$139 ($or).
Removed top 8 bits (of 32) from mux cell FemtoRV32.$ternary$cores/cpu/femtorv32_quark.v:230$142 ($mux).
Removed top 8 bits (of 32) from port B of cell FemtoRV32.$or$cores/cpu/femtorv32_quark.v:226$143 ($or).
Removed top 1 bits (of 2) from port B of cell FemtoRV32.$eq$cores/cpu/femtorv32_quark.v:247$147 ($eq).
Removed top 2 bits (of 4) from mux cell FemtoRV32.$ternary$cores/cpu/femtorv32_quark.v:285$160 ($mux).
Removed top 28 bits (of 32) from mux cell FemtoRV32.$ternary$cores/cpu/femtorv32_quark.v:357$186 ($mux).
Removed top 31 bits (of 32) from port B of cell FemtoRV32.$add$cores/cpu/femtorv32_quark.v:380$193 ($add).
Removed top 1 bits (of 4) from mux cell FemtoRV32.$procmux$314 ($mux).
Removed top 1 bits (of 4) from wire FemtoRV32.$procmux$314_Y.
Removed top 27 bits (of 32) from wire FemtoRV32.$sub$cores/cpu/femtorv32_quark.v:174$106_Y.
Removed top 31 bits (of 32) from wire FemtoRV32.$ternary$cores/cpu/femtorv32_quark.v:144$88_Y.
Removed top 31 bits (of 32) from wire FemtoRV32.$ternary$cores/cpu/femtorv32_quark.v:145$90_Y.
Removed top 8 bits (of 32) from wire FemtoRV32.$ternary$cores/cpu/femtorv32_quark.v:229$138_Y.
Removed top 8 bits (of 32) from wire FemtoRV32.$ternary$cores/cpu/femtorv32_quark.v:230$142_Y.
Removed top 2 bits (of 4) from wire FemtoRV32.$ternary$cores/cpu/femtorv32_quark.v:285$160_Y.
Removed top 28 bits (of 32) from wire FemtoRV32.$ternary$cores/cpu/femtorv32_quark.v:357$186_Y.
Removed top 19 address bits (of 30) from memory init port Memory.$auto$proc_memwr.cc:45:proc_memwr$738 (MEM).
Removed top 19 address bits (of 30) from memory init port Memory.$auto$proc_memwr.cc:45:proc_memwr$739 (MEM).
Removed top 19 address bits (of 30) from memory init port Memory.$auto$proc_memwr.cc:45:proc_memwr$740 (MEM).
Removed top 19 address bits (of 30) from memory init port Memory.$auto$proc_memwr.cc:45:proc_memwr$741 (MEM).
Removed top 21 address bits (of 32) from memory init port Memory.$meminit$\MEM$cores/memory/Memory.v:0$48 (MEM).
Removed top 19 address bits (of 30) from memory read port Memory.$memrd$\MEM$cores/memory/Memory.v:21$35 (MEM).
Removed top 19 bits (of 30) from mux cell Memory.$procmux$420 ($mux).
Removed top 19 bits (of 30) from mux cell Memory.$procmux$429 ($mux).
Removed top 19 bits (of 30) from mux cell Memory.$procmux$438 ($mux).
Removed top 19 bits (of 30) from mux cell Memory.$procmux$447 ($mux).
Removed top 19 bits (of 30) from wire Memory.$0$memwr$\MEM$cores/memory/Memory.v:23$18_ADDR[29:0]$23.
Removed top 24 bits (of 32) from wire Memory.$0$memwr$\MEM$cores/memory/Memory.v:23$18_EN[31:0]$25.
Removed top 19 bits (of 30) from wire Memory.$0$memwr$\MEM$cores/memory/Memory.v:24$19_ADDR[29:0]$26.
Removed top 16 bits (of 32) from wire Memory.$0$memwr$\MEM$cores/memory/Memory.v:24$19_EN[31:0]$28.
Removed top 19 bits (of 30) from wire Memory.$0$memwr$\MEM$cores/memory/Memory.v:25$20_ADDR[29:0]$29.
Removed top 1 bits (of 7) from port B of cell chip_select.$procmux$399_CMP0 ($eq).
Removed top 2 bits (of 7) from port B of cell chip_select.$procmux$400_CMP0 ($eq).
Removed top 3 bits (of 7) from port B of cell chip_select.$procmux$401_CMP0 ($eq).
Removed top 4 bits (of 7) from port B of cell chip_select.$procmux$402_CMP0 ($eq).
Removed top 5 bits (of 7) from port B of cell chip_select.$procmux$403_CMP0 ($eq).
Removed top 6 bits (of 7) from port B of cell chip_select.$procmux$404_CMP0 ($eq).
Removed top 9 bits (of 16) from port B of cell chip_select.$procmux$407_CMP0 ($eq).
Removed top 9 bits (of 16) from port B of cell chip_select.$procmux$408_CMP0 ($eq).
Removed top 9 bits (of 16) from port B of cell chip_select.$procmux$409_CMP0 ($eq).
Removed top 9 bits (of 16) from port B of cell chip_select.$procmux$410_CMP0 ($eq).
Removed top 9 bits (of 16) from port B of cell chip_select.$procmux$411_CMP0 ($eq).
Removed top 9 bits (of 16) from port B of cell chip_select.$procmux$412_CMP0 ($eq).
Removed top 31 bits (of 32) from port B of cell mult.$add$cores/mult/mult.v:83$199 ($add).
Removed top 27 bits (of 32) from port Y of cell mult.$add$cores/mult/mult.v:83$199 ($add).
Removed top 27 bits (of 32) from port B of cell mult.$gt$cores/mult/mult.v:84$200 ($gt).
Removed top 1 bits (of 3) from port B of cell mult.$procmux$250_CMP0 ($eq).
Removed top 2 bits (of 3) from mux cell mult.$procmux$256 ($mux).
Removed top 2 bits (of 3) from port B of cell mult.$procmux$259_CMP0 ($eq).
Removed top 1 bits (of 3) from port B of cell mult.$procmux$274_CMP0 ($eq).
Removed top 2 bits (of 3) from wire mult.$4\state[2:0].
Removed top 27 bits (of 32) from wire mult.$add$cores/mult/mult.v:83$199_Y.
Removed top 3 bits (of 5) from port B of cell perip_laser.$eq$cores/laser/perip_laser.v:19$17 ($eq).
Removed top 1 bits (of 5) from port B of cell peripheral_mult.$procmux$462_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell peripheral_mult.$procmux$509_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell peripheral_mult.$procmux$510_CMP0 ($eq).
Removed top 2 bits (of 5) from port B of cell peripheral_mult.$procmux$511_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell peripheral_uart_addr_decoder.$procmux$231_CMP0 ($eq).
Removed top 1 bits (of 2) from mux cell peripheral_uart_addr_decoder.$ternary$cores/uart/perip_uart.v:135$213 ($mux).
Removed top 1 bits (of 2) from wire peripheral_uart_addr_decoder.$ternary$cores/uart/perip_uart.v:135$213_Y.
Removed top 22 bits (of 32) from mux cell peripheral_uart_register_control.$procmux$233 ($pmux).
Removed top 1 bits (of 2) from port B of cell peripheral_uart_register_control.$procmux$235_CMP0 ($eq).
Removed top 22 bits (of 32) from wire peripheral_uart_register_control.$0\d_out[31:0].
Removed top 31 bits (of 32) from port B of cell uart_rx.$add$cores/uart/uart.v:98$225 ($add).
Removed top 28 bits (of 32) from port Y of cell uart_rx.$add$cores/uart/uart.v:98$225 ($add).
Removed top 31 bits (of 32) from port B of cell uart_rx.$add$cores/uart/uart.v:101$227 ($add).
Removed top 28 bits (of 32) from port Y of cell uart_rx.$add$cores/uart/uart.v:101$227 ($add).
Removed top 28 bits (of 32) from wire uart_rx.$add$cores/uart/uart.v:101$227_Y.
Removed top 28 bits (of 32) from wire uart_rx.$add$cores/uart/uart.v:98$225_Y.
Removed top 31 bits (of 32) from port B of cell uart_tx.$add$cores/uart/uart.v:153$219 ($add).
Removed top 28 bits (of 32) from port Y of cell uart_tx.$add$cores/uart/uart.v:153$219 ($add).
Removed top 31 bits (of 32) from port B of cell uart_tx.$add$cores/uart/uart.v:156$221 ($add).
Removed top 28 bits (of 32) from port Y of cell uart_tx.$add$cores/uart/uart.v:156$221 ($add).
Removed top 28 bits (of 32) from wire uart_tx.$add$cores/uart/uart.v:153$219_Y.

12.9. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module $paramod$1c9b49bacefaeab44db5983aee61d9795015608a\uart..
Finding unused cells or wires in module $paramod$e358107493866f19ba52d8dda1c67d080e76663e\peripheral_uart..
Finding unused cells or wires in module \FemtoRV32..
Finding unused cells or wires in module \Memory..
Finding unused cells or wires in module \SOC..
Finding unused cells or wires in module \chip_select..
Finding unused cells or wires in module \mult..
Finding unused cells or wires in module \perip_laser..
Finding unused cells or wires in module \peripheral_mult..
Finding unused cells or wires in module \peripheral_uart_addr_decoder..
Finding unused cells or wires in module \peripheral_uart_register_control..
Finding unused cells or wires in module \uart_rx..
Finding unused cells or wires in module \uart_tx..
Removed 0 unused cells and 22 unused wires.

12.10. Executing MEMORY_COLLECT pass (generating $mem cells).

12.11. Executing OPT pass (performing simple optimizations).

12.11.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module $paramod$1c9b49bacefaeab44db5983aee61d9795015608a\uart.
Optimizing module $paramod$e358107493866f19ba52d8dda1c67d080e76663e\peripheral_uart.
Optimizing module FemtoRV32.
Optimizing module Memory.
Optimizing module SOC.
Optimizing module chip_select.
Optimizing module mult.
Optimizing module perip_laser.
Optimizing module peripheral_mult.
Optimizing module peripheral_uart_addr_decoder.
Optimizing module peripheral_uart_register_control.
Optimizing module uart_rx.
Optimizing module uart_tx.

12.11.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `$paramod$1c9b49bacefaeab44db5983aee61d9795015608a\uart'.
Finding identical cells in module `$paramod$e358107493866f19ba52d8dda1c67d080e76663e\peripheral_uart'.
Finding identical cells in module `\FemtoRV32'.
Finding identical cells in module `\Memory'.
Finding identical cells in module `\SOC'.
Finding identical cells in module `\chip_select'.
Finding identical cells in module `\mult'.
Finding identical cells in module `\perip_laser'.
Finding identical cells in module `\peripheral_mult'.
Finding identical cells in module `\peripheral_uart_addr_decoder'.
Finding identical cells in module `\peripheral_uart_register_control'.
Finding identical cells in module `\uart_rx'.
Finding identical cells in module `\uart_tx'.
Removed a total of 0 cells.

12.11.3. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module $paramod$1c9b49bacefaeab44db5983aee61d9795015608a\uart..
Finding unused cells or wires in module $paramod$e358107493866f19ba52d8dda1c67d080e76663e\peripheral_uart..
Finding unused cells or wires in module \FemtoRV32..
Finding unused cells or wires in module \Memory..
Finding unused cells or wires in module \SOC..
Finding unused cells or wires in module \chip_select..
Finding unused cells or wires in module \mult..
Finding unused cells or wires in module \perip_laser..
Finding unused cells or wires in module \peripheral_mult..
Finding unused cells or wires in module \peripheral_uart_addr_decoder..
Finding unused cells or wires in module \peripheral_uart_register_control..
Finding unused cells or wires in module \uart_rx..
Finding unused cells or wires in module \uart_tx..

12.11.4. Finished fast OPT passes.

12.12. Printing statistics.

=== $paramod$1c9b49bacefaeab44db5983aee61d9795015608a\uart ===

   Number of wires:                 18
   Number of wire bits:            104
   Number of public wires:          15
   Number of public wire bits:      34
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                  9
     $dff                            3
     $logic_not                      1
     $mux                            2
     $sub                            1
     uart_rx                         1
     uart_tx                         1

=== $paramod$e358107493866f19ba52d8dda1c67d080e76663e\peripheral_uart ===

   Number of wires:                 18
   Number of wire bits:            133
   Number of public wires:          18
   Number of public wire bits:     133
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                  3
     $paramod$1c9b49bacefaeab44db5983aee61d9795015608a\uart      1
     peripheral_uart_addr_decoder      1
     peripheral_uart_register_control      1

=== FemtoRV32 ===

   Number of wires:                169
   Number of wire bits:           2717
   Number of public wires:          61
   Number of public wire bits:     818
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                156
     $add                            7
     $and                           19
     $dff                            8
     $eq                             9
     $logic_not                     10
     $mem_v2                         1
     $mux                           65
     $not                            2
     $or                            28
     $pmux                           1
     $reduce_bool                    1
     $reduce_or                      1
     $shl                            1
     $sub                            1
     $xor                            2

=== Memory ===

   Number of wires:                 21
   Number of wire bits:            475
   Number of public wires:           7
   Number of public wire bits:     132
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                 15
     $dff                            1
     $mem_v2                         1
     $mux                           13

=== SOC ===

   Number of wires:                 28
   Number of wire bits:            260
   Number of public wires:          25
   Number of public wire bits:     254
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                 10
     $and                            2
     $logic_not                      1
     $paramod$e358107493866f19ba52d8dda1c67d080e76663e\peripheral_uart      1
     $reduce_or                      1
     FemtoRV32                       1
     Memory                          1
     chip_select                     1
     perip_laser                     1
     peripheral_mult                 1

=== chip_select ===

   Number of wires:                 23
   Number of wire bits:            308
   Number of public wires:          10
   Number of public wire bits:     295
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                 15
     $eq                            13
     $pmux                           2

=== mult ===

   Number of wires:                 36
   Number of wire bits:            275
   Number of public wires:          11
   Number of public wire bits:     108
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                 31
     $add                            2
     $adff                           3
     $dff                            3
     $eq                             5
     $gt                             1
     $logic_not                      2
     $mux                            7
     $pmux                           6
     $reduce_or                      2

=== perip_laser ===

   Number of wires:                 14
   Number of wire bits:            203
   Number of public wires:           9
   Number of public wire bits:     105
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                  6
     $dff                            1
     $eq                             1
     $logic_and                      1
     $mux                            3

=== peripheral_mult ===

   Number of wires:                 36
   Number of wire bits:            381
   Number of public wires:          14
   Number of public wire bits:     172
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                 28
     $dff                            4
     $eq                             7
     $logic_and                      2
     $mux                           12
     $pmux                           2
     mult                            1

=== peripheral_uart_addr_decoder ===

   Number of wires:                  7
   Number of wire bits:             14
   Number of public wires:           3
   Number of public wire bits:       8
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                  5
     $eq                             2
     $mux                            2
     $pmux                           1

=== peripheral_uart_register_control ===

   Number of wires:                 20
   Number of wire bits:            127
   Number of public wires:          13
   Number of public wire bits:      97
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                 11
     $dff                            4
     $eq                             2
     $logic_and                      2
     $mux                            2
     $pmux                           1

=== uart_rx ===

   Number of wires:                 57
   Number of wire bits:            187
   Number of public wires:          12
   Number of public wire bits:      32
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                 52
     $add                            2
     $dff                            7
     $eq                             1
     $logic_not                      2
     $mux                           38
     $pmux                           1
     $reduce_or                      1

=== uart_tx ===

   Number of wires:                 42
   Number of wire bits:            152
   Number of public wires:          10
   Number of public wire bits:      30
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                 37
     $add                            2
     $dff                            5
     $eq                             2
     $logic_and                      2
     $logic_not                      3
     $mux                           20
     $pmux                           1
     $reduce_or                      2

=== design hierarchy ===

   SOC                               1
     $paramod$e358107493866f19ba52d8dda1c67d080e76663e\peripheral_uart      1
       $paramod$1c9b49bacefaeab44db5983aee61d9795015608a\uart      1
         uart_rx                     1
         uart_tx                     1
       peripheral_uart_addr_decoder      1
       peripheral_uart_register_control      1
     FemtoRV32                       1
     Memory                          1
     chip_select                     1
     perip_laser                     1
     peripheral_mult                 1
       mult                          1

   Number of wires:                489
   Number of wire bits:           5336
   Number of public wires:         208
   Number of public wire bits:    2218
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                366
     $add                           13
     $adff                           3
     $and                           21
     $dff                           36
     $eq                            42
     $gt                             1
     $logic_and                      7
     $logic_not                     19
     $mem_v2                         2
     $mux                          164
     $not                            2
     $or                            28
     $pmux                          15
     $reduce_bool                    1
     $reduce_or                      7
     $shl                            1
     $sub                            2
     $xor                            2

12.13. Executing CHECK pass (checking for obvious problems).
Checking module $paramod$1c9b49bacefaeab44db5983aee61d9795015608a\uart...
Checking module $paramod$e358107493866f19ba52d8dda1c67d080e76663e\peripheral_uart...
Checking module FemtoRV32...
Checking module Memory...
Checking module SOC...
Checking module chip_select...
Checking module mult...
Checking module perip_laser...
Checking module peripheral_mult...
Checking module peripheral_uart_addr_decoder...
Checking module peripheral_uart_register_control...
Checking module uart_rx...
Checking module uart_tx...
Found and reported 0 problems.

13. Executing HIERARCHY pass (managing design hierarchy).

13.1. Analyzing design hierarchy..
Top module:  \SOC
Used module:     \FemtoRV32
Used module:     \Memory
Used module:     \chip_select
Used module:     \peripheral_mult
Used module:         \mult
Used module:     $paramod$e358107493866f19ba52d8dda1c67d080e76663e\peripheral_uart
Used module:         \peripheral_uart_addr_decoder
Used module:         \peripheral_uart_register_control
Used module:         $paramod$1c9b49bacefaeab44db5983aee61d9795015608a\uart
Used module:             \uart_rx
Used module:             \uart_tx
Used module:     \perip_laser

13.2. Analyzing design hierarchy..
Top module:  \SOC
Used module:     \FemtoRV32
Used module:     \Memory
Used module:     \chip_select
Used module:     \peripheral_mult
Used module:         \mult
Used module:     $paramod$e358107493866f19ba52d8dda1c67d080e76663e\peripheral_uart
Used module:         \peripheral_uart_addr_decoder
Used module:         \peripheral_uart_register_control
Used module:         $paramod$1c9b49bacefaeab44db5983aee61d9795015608a\uart
Used module:             \uart_rx
Used module:             \uart_tx
Used module:     \perip_laser
Removed 0 unused modules.

14. Executing PROC pass (convert processes to netlists).

14.1. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

14.2. Executing PROC_RMDEAD pass (remove dead branches from decision trees).
Removed a total of 0 dead cases.

14.3. Executing PROC_PRUNE pass (remove redundant assignments in processes).
Removed 0 redundant assignments.
Promoted 0 assignments to connections.

14.4. Executing PROC_INIT pass (extract init attributes).

14.5. Executing PROC_ARST pass (detect async resets in processes).

14.6. Executing PROC_ROM pass (convert switches to ROMs).
Converted 0 switches.

14.7. Executing PROC_MUX pass (convert decision trees to multiplexers).

14.8. Executing PROC_DLATCH pass (convert process syncs to latches).

14.9. Executing PROC_DFF pass (convert process syncs to FFs).

14.10. Executing PROC_MEMWR pass (convert process memory writes to cells).

14.11. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

14.12. Executing OPT_EXPR pass (perform const folding).
Optimizing module $paramod$1c9b49bacefaeab44db5983aee61d9795015608a\uart.
Optimizing module $paramod$e358107493866f19ba52d8dda1c67d080e76663e\peripheral_uart.
Optimizing module FemtoRV32.
Optimizing module Memory.
Optimizing module SOC.
Optimizing module chip_select.
Optimizing module mult.
Optimizing module perip_laser.
Optimizing module peripheral_mult.
Optimizing module peripheral_uart_addr_decoder.
Optimizing module peripheral_uart_register_control.
Optimizing module uart_rx.
Optimizing module uart_tx.

15. Executing JSON backend.

Warnings: 2 unique messages, 2 total
End of script. Logfile hash: 2a7d3dd42e, CPU: user 0.50s system 0.02s, MEM: 18.48 MB peak
Yosys 0.33+6 (git sha1 41b34a193, x86_64-conda-linux-gnu-cc 11.2.0 -fvisibility-inlines-hidden -fmessage-length=0 -march=nocona -mtune=haswell -ftree-vectorize -fPIC -fstack-protector-strong -fno-plt -O2 -ffunction-sections -fdebug-prefix-map=/root/conda-eda/conda-eda/workdir/conda-env/conda-bld/yosys_1694128612374/work=/usr/local/src/conda/yosys-0.33_7_g41b34a193 -fdebug-prefix-map=/home/juanf/miniconda3/envs/digital=/usr/local/src/conda-prefix -fPIC -Os -fno-merge-constants)
Time spent: 21% 5x opt_clean (0 sec), 17% 7x opt_expr (0 sec), ...
